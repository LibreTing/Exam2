package com.example.a01.mokao_jiekuo;

/**
 * Created by 01 on 2017/5/17.
 */

public class Stu
{
    String name;
    int age;

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }
}





package com.example.a01.mokao_jiekuo;

import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.support.v7.app.AppCompatActivity;
import android.util.Log;
import android.widget.ListView;
import android.widget.Toast;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;

import org.json.JSONObject;

import java.io.ByteArrayOutputStream;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.List;

public class Stuactivitylistview extends AppCompatActivity {
    List<Stu> stulist=null;
    ListView listView;
    //定义一个在主线程和子线程直接进行通信的一个**东西  handler
    private Handler handler=new Handler(){
        @Override
        public void handleMessage(Message msg) {
            super.handleMessage(msg);
            switch (msg.what)
            {
                case 200:
                    //完成数据绑定
                    if(stulist!=null)
                    {
                        //绑定数据
                        StuAdapter stuAdapter=new StuAdapter(stulist,Stuactivitylistview.this);
                        listView.setAdapter(stuAdapter);
                    }

                    break;
                case  -1:
                    //获取失败
                    Toast.makeText(Stuactivitylistview.this,"获取失败",Toast.LENGTH_SHORT).show();
                    break;
                case -2:
                    //获取发生异常
                    Toast.makeText(Stuactivitylistview.this,"获取发生异常",Toast.LENGTH_SHORT).show();
                    break;
                default:
                    //其他情况
                    Toast.makeText(Stuactivitylistview.this,"获取发生异常",Toast.LENGTH_SHORT).show();
            }

        }
    };

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_json_main);
        listView=(ListView)findViewById(R.id.list_item);

            //从服务器获取数据
            getDataFromService();
    }
    //从服务器获取数据
    private  void getDataFromService()
    {
        final String  path="http://192.168.1.103/index.php";
        // 开线程
        new Thread(){
            @Override
            public void run() {
                super.run();
                //获取数据
                try {
                    //建立对象
                    URL url = new URL(path);
                    //发送请求
                    HttpURLConnection conn=(HttpURLConnection)url.openConnection();
                    conn.setRequestMethod("GET");  //必须大写
                    conn.setConnectTimeout(5000);
                    int code=conn.getResponseCode();
                    if(code==200)
                    {
                        //请求成功
                        InputStream inputStream=conn.getInputStream();
                        //然后把输入流转为字符串 。上网找一个把流转为字符串的函数
                        String abc=inputstream2string(inputStream);
                        //解析json字符串
                        //先拿到code 。 判断code是否等于200
                        //  {"code":200,"pageindex":10,"isover":1,"data":[{"name":"\u5f20\u5b8f90","age":91},{"name":"\u5f20\u5b8f91","age":92},{"name":"\u5f20\u5b8f92","age":93},{"name":"\u5f20\u5b8f93","age":94},{"name":"\u5f20\u5b8f94","age":95},{"name":"\u5f20\u5b8f95","age":96},{"name":"\u5f20\u5b8f96","age":97},{"name":"\u5f20\u5b8f97","age":98},{"name":"\u5f20\u5b8f98","age":99},{"name":"\u5f20\u5b8f99","age":100}]}
                        JSONObject jsonObject=new JSONObject(abc);
                        if(jsonObject.getString("code").equals("200"))
                        {
                            //如果等于200。 服务器数据有效的
                            String studata= jsonObject.getString("data");
                            //studata=[{"name":"\u5f20\u5b8f90","age":91}，。。。。]
                            Gson gson=new Gson();
                            //解析ｊｓｏｎ为ｌｉｓｔ
                            stulist = gson.fromJson(studata, new TypeToken<List<Stu>>(){}.getType());
                            Message message=new Message();
                            message.obj=abc;  //定义带有数据的消息
                            message.what=200; //200代码获取数据正常
                            handler.sendMessage(message);
                            Log.d("zh","发送消息正常");
                        }
                        else
                        {
                            //返回码不是200的情况
                        }
                    }
                    else
                    {
                        //请求失败
                        Message message=new Message();
                        message.what=-1; //-1  代码获取数据失败
                        handler.sendMessage(message);
                        Log.d("zh","请求失败");
                    }
                }
                catch (Exception ex)
                {
                    Message message=new Message();
                    message.what=-2; //-1  代码获取数据时发生异常情况
                    //发送消息
                    handler.sendMessage(message);
                    Log.d("zh","Exception");

                }
            }
        }.start();

    }
    private  String inputstream2string(InputStream inputStream)
    {
        try {
            ByteArrayOutputStream baos=new ByteArrayOutputStream();
            int length=0;
            byte[] buffer=new byte[1024];
            while((length=inputStream.read(buffer))!=-1){
                baos.write(buffer, 0, length);
            }
            inputStream.close();
            baos.close();
            //或者用这种方法
            //byte[] result=baos.toByteArray();
            //return new String(result);
            return baos.toString();
        } catch (Exception e) {
            e.printStackTrace();
            return "获取失败";
        }
    }
}






package com.example.a01.mokao_jiekuo;

import android.app.Activity;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.TextView;

import java.util.List;

/**
 * Created by Administrator on 2017/5/15.
 */
public class StuAdapter extends BaseAdapter {
    public  List<Stu> list;
    public Activity activity;
    public void setdata(List<Stu> list){
        this.list=list;
    }
    public StuAdapter(List<Stu> list, Activity activity)
    {
        this.list=list;
        this.activity=activity;
    }

    @Override
    public int getCount() {
        return list.size();
    }

    @Override
    public Object getItem(int position) {
        return list.get(position);
    }

    @Override
    public long getItemId(int position) {
        return position;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        View view=activity.getLayoutInflater().inflate(R.layout.item,null);
        TextView name=(TextView)view.findViewById(R.id.name);
        name.setText(list.get(position).getName());
        TextView age=(TextView)view.findViewById(R.id.age);
        age.setText(list.get(position).getAge()+"");
        return view;
    }
}





item.xml

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context="com.example.a01.mokao_jiekuo.Stuactivitylistview">

   <TextView
       android:id="@+id/name"
       android:layout_width="50dp"
       android:layout_height="wrap_content" />
    <TextView
        android:id="@+id/age"
        android:layout_width="100dp"
        android:layout_height="80dp" />
</LinearLayout>


activity_json_main.xml

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    tools:context="com.example.a01.mokao_jiekuo.Stuactivitylistview">
    <ListView
        android:id="@+id/list_item"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"></ListView>
</LinearLayout>


AndroidManifest.xml

<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.a01.mokao_jiekuo">

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <activity android:name=".Stuactivitylistview">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>

</manifest>



build.gradle

compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.0-alpha7'
    compile 'com.google.code.gson:gson:2.2.4'
    testCompile 'junit:junit:4.12'
